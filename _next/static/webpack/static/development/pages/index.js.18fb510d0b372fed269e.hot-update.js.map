{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.18fb510d0b372fed269e.hot-update.js","sources":["webpack:///./components/Post.js"],"sourcesContent":["import { useState, useRef, useEffect, useContext } from \"react\";\r\n\r\nimport CommentIcon from \"../res/svg/commentIcon.svg\"\r\nimport { Vote } from \"./Vote\";\r\nimport { Timestamp } from \"./Timestamp\"\r\n\r\nimport s from \"../style/post.module.sass\";\r\n\r\nimport { CommentSection } from \"./CommentSection\";\r\nimport { DropdownItem } from '../components/MultilevelMenu';\r\n\r\n//markdown styling\r\nimport mdStyle from \"../style/document.module.sass\";\r\nimport markdown from \"../helpers/markdown\";\r\nconst md = markdown({anchor: false, embeds: true, supressHeadings: true});\r\n\r\nimport {MenuData} from \"./layout/ContextMenu\";\r\nimport { useIdentity } from \"../hooks/identity\";\r\n\r\nimport {FaBan, FaLock, FaLockOpen, FaEye, FaEyeSlash, FaCommentDots} from \"react-icons/fa\";\r\nimport {ImEmbed} from \"react-icons/im\";\r\nimport {MdEdit} from \"react-icons/md\";\r\nimport { ConfirmMenuItem } from \"./ConfirmMenuItem\";\r\nimport { PostForm } from \"./PostForm\";\r\n\r\nconsole.log(s.postScronch)\r\n\r\nexport const Post = React.forwardRef((props, ref) => {\r\n    var p = props.post;\r\n    var [commentsOpen, setCommentsOpen] = useState(false);\r\n    var [collapsed, setCollapsed] = useState(false);\r\n\r\n    var [deletion, setDeletion] = useState(false);\r\n\r\n    //----show a context menu on rightclick\r\n    var contextMenu = useContext(MenuData);\r\n    var [id, axios] = useIdentity();\r\n    var embed = props.embed;\r\n\r\n    var [editing, setEditing] = useState(false);\r\n\r\n    \r\n    const bodyRef = useRef();\r\n\r\n\r\n    function context(evt) {\r\n        if(deletion || editing) return false\r\n        evt.preventDefault();\r\n        \r\n\r\n        var menu = [\r\n            <ConfirmMenuItem text=\"Embed\" leftIcon={<ImEmbed/>} onClick={async () => {\r\n                try {\r\n                    await navigator.clipboard.writeText(`<iframe src=\"https://drkslv.github.io/discussion/embed/post?id=${p.entity.id}\" width=\"700px\" height=\"500px\" frameborder=\"0\"></iframe>`)\r\n                    return true;\r\n                } catch (error) {\r\n                    return false;\r\n                }\r\n            }}/>\r\n        ]\r\n        if(typeof id.active !== \"number\" || !id.users[id.active])\r\n            return contextMenu.openMenu(evt.pageX, evt.pageY, menu);\r\n\r\n        if(p.author && id.users[id.active].username === p.author.username) \r\n            menu.push(\r\n            <DropdownItem text=\"Edit\" onClick={edit} leftIcon={<MdEdit/>}/>);\r\n        if((p.author &&  id.users[id.active].username === p.author.username) || id.users[id.active].moderator)\r\n            menu.push(<DropdownItem text=\"Delete\" onClick={deleteP} warn={true} leftIcon={<FaBan/>}/>);\r\n        if(id.users[id.active].moderator) {\r\n            var l = p.entity.comments_locked;\r\n            var h = p.entity.comments_hidden;\r\n            menu.push( \r\n                <DropdownItem text=\"Comments\" warn={true} leftIcon={<FaCommentDots/>}>\r\n                    <DropdownItem text={!l?\"Lock\":\"Unlock\"} leftIcon={!l?<FaLock/>:<FaLockOpen/>} warn={true} onClick={()=>entity(!l)}/>\r\n                    <DropdownItem text={!h?\"Hide\":\"Show\"} leftIcon={!h?<FaEyeSlash/>:<FaEye/>} warn={true} onClick={()=>entity(undefined,!h)}/>\r\n                </DropdownItem>\r\n            )\r\n        }\r\n\r\n        contextMenu.openMenu(evt.pageX, evt.pageY, menu); \r\n        \r\n    }\r\n\r\n    async function entity(lock, hide) {\r\n        axios.put(`/entity/${p.entity.id}`, {\r\n            comments_locked: lock,\r\n            comments_hidden: hide\r\n        }).then(() => {\r\n            contextMenu.removeMenu();\r\n            setCommentsOpen(false);\r\n            props.rerenderFunc();\r\n        });\r\n    }\r\n\r\n    async function edit() {\r\n        console.log(\"edit post\");\r\n            \r\n        contextMenu.removeMenu()\r\n        setEditing(true);\r\n        scrollFetch();\r\n    }\r\n\r\n    async function deleteP() {\r\n        axios.delete(`/post/${p.entity.id}`).then(async () => {\r\n            console.log(\"scronch post\");\r\n            \r\n            contextMenu.removeMenu()\r\n            setCommentsOpen(false);\r\n            setDeletion(true);\r\n            scrollFetch();\r\n            await later(2000);\r\n            props.rerenderFunc();\r\n        }).catch(() => {\r\n            contextMenu.removeMenu()\r\n        });\r\n    }\r\n\r\n    function scrollFetch(){\r\n        var bodyRect = document.body.getBoundingClientRect(),\r\n        elemRect = bodyRef.current.getBoundingClientRect(),\r\n        offset   = elemRect.top - bodyRect.top;\r\n\r\n        if(bodyRef.current.clientHeight>350 && commentsOpen && offset<window.scrollY && !embed) {\r\n            bodyRef.current.scrollIntoView();\r\n            window.scrollBy(0, -120);\r\n        }\r\n    }   \r\n    \r\n    async function onEdit(text, cancel) {\r\n        if(cancel) return setEditing(false);\r\n\r\n        try {\r\n            var res = axios.put(`/post/${p.entity.id}`, {text});\r\n        } catch (error) {\r\n            return false\r\n        }\r\n        setEditing(false);\r\n        props.rerenderFunc(p.entity.id);\r\n        return true;\r\n    }\r\n    \r\n\r\n    //----Expand when clicked\r\n    var myVote=null;\r\n    var votes = p.entity.votes;\r\n    if(votes && votes[0])\r\n        myVote=votes[0].positive;\r\n\r\n    \r\n    useEffect(() => {      \r\n        setCollapsed(!commentsOpen && !editing&& bodyRef.current.clientHeight>350);\r\n        \r\n    }, [bodyRef, commentsOpen,])\r\n\r\n    var expandTime;\r\n    if(bodyRef.current) {\r\n        expandTime = 0.71428571429 * bodyRef.current.clientHeight-350;\r\n    }\r\n\r\n    return (\r\n        <div className={`${s.postWrapper} ${deletion && !(commentsOpen && bodyRef.current.clientHeight>350) && s.postScronch}`}>\r\n            <div className={`${s.post}`} \r\n                onClick={()=>{ \r\n                    if(!deletion && !editing) setCommentsOpen(!commentsOpen);\r\n                    if(!editing) scrollFetch();\r\n                }} \r\n                onContextMenu={context}\r\n                data-expanded={commentsOpen}\r\n            >\r\n                {!editing ? (<><Vote up={p.entity.upvotes} down={p.entity.downvotes} id={p.entity.id} my={myVote}></Vote>\r\n                <div className={s.content} ref={ref}>\r\n                    <div>\r\n                        <div className={s.comments}>\r\n                            {!p.entity.comments_hidden?(p.entity.comment.rgt-p.entity.comment.lft-1)/2:\"Disabled\"}\r\n                            <CommentIcon/>\r\n                        </div>\r\n                        <p className={s.title}>\r\n                            <b>{p.title}</b><br/>\r\n                            <span className={s.author}>posted by {p.author ? p.author.username : \"❌DELETED❌\"}</span>\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className={s.body} style={{maxHeight: !commentsOpen ? \"350px\" : bodyRef.current.clientHeight+10, \"--expandtime\": expandTime+\"ms\", overflow:\"hidden\"}}>\r\n                        <div dangerouslySetInnerHTML={{__html: md(p.text)}} className={mdStyle.mdPost} ref={bodyRef}></div>\r\n                        {collapsed && <div className={s.expandDialogWrapper}><div className={s.expandDialog}>Click to Expand</div></div>}\r\n                    </div>\r\n                    \r\n                    <Timestamp time={p.createdAt} edit={p.updatedAt}></Timestamp>\r\n                </div></>) \r\n                : (<PostForm title={p.title} text={p.text} edit onEdit={onEdit}/>)\r\n                }\r\n            </div>\r\n            {!p.entity.comments_hidden? <CommentSection id={p.entity.id} open={commentsOpen} key={\"cs\"+p.entity.id} entity={p.entity}/> : <></>}\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\nfunction later(delay) {\r\n    return new Promise(function(resolve) {\r\n        setTimeout(resolve, delay);\r\n    });\r\n}\r\nfunction checkVisible(elm) {\r\n    var rect = elm.getBoundingClientRect();\r\n    var viewHeight = Math.max(document.documentElement.clientHeight, window.innerHeight);\r\n    return !(rect.bottom < 0 || rect.top - viewHeight >= 0);\r\n  }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAMA;AACA;AATA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AAXA;AAAA;AAAA;AACA;AAcbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAIA;AAAA;AAAA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAQA;AACA;AATA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAaA;AACA;AACA;AAIA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}