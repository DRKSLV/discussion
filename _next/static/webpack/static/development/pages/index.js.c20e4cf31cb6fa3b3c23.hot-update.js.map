{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.c20e4cf31cb6fa3b3c23.hot-update.js","sources":["webpack:///./components/layout/Header.js"],"sourcesContent":["import style from \"../../style/header.module.sass\";\r\nimport drawerAnim from \"../../style/headerDrawer.module.sass\"\r\n\r\nimport EyeOfJudgement from \"../../res/svg/eyeOfJudgementEllipse.svg\"\r\nimport { useState } from \"react\";\r\n\r\nimport { OutsideAlerter } from \"../../hooks/clickOutside\";\r\n\r\nimport { Dropdown, DropdownItem } from '../MultilevelMenu';\r\nimport { CSSTransition, TransitionGroup, SwitchTransition } from \"react-transition-group\";\r\nimport { EyePlaceholder } from \"./EyeOfJudgement\";\r\n\r\nexport function Header(props) {\r\n    //Drawer\r\n    var [drawerButton, setDrawerButton] = useState(-2);\r\n    var [drawer, setDrawer] = useState(undefined);\r\n\r\n    //collect refs\r\n    var items = props.children || [];\r\n    var refs = [];\r\n\r\n    if (!Array.isArray(items)) {\r\n        items = [items];\r\n    }\r\n    var itemObj = items.map((item, index) => {\r\n        return React.cloneElement(item, { ref: (ref) =>  refs.push(ref), key: index, addDrawer: addDrawer(index), removeDrawer: removeDrawer(index), drawer})\r\n    });\r\n    console.log(refs);\r\n\r\n    function addDrawer(nr) {\r\n        return (drawer) => {\r\n            setDrawer(drawer);\r\n            setDrawerButton(nr);\r\n        }\r\n    }\r\n\r\n    function removeDrawer(nr) {\r\n        return () => {\r\n            setDrawer(undefined);\r\n            setDrawerButton(-2);\r\n        }\r\n    }\r\n    var open = drawerButton>-1;\r\n\r\n\r\n    return ( \r\n        <>\r\n            <nav className={style.header}>\r\n                <div className={style.headerStart}> \r\n                    <EyePlaceholder size={40} id=\"default\"></EyePlaceholder>\r\n                    <div className={style.title}>\r\n                        {props.title}\r\n                    </div>\r\n                </div>\r\n                <ul className={style.headerTray}>\r\n                    {itemObj}\r\n                </ul>\r\n            </nav>\r\n            <div style={{paddingTop: \"50px\"}}></div>\r\n\r\n            <div className={style.headerDrawerWrap}>\r\n                <SwitchTransition mode={\"out-in\"}>\r\n                    <CSSTransition\r\n                        classNames={{...drawerAnim}}\r\n                        className={style.headerDrawer}\r\n                        timeout={open ? 500 : 0}\r\n                        key={drawerButton}\r\n                        >\r\n                        <div>{drawer}</div>\r\n                    </CSSTransition>\r\n                </SwitchTransition>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport const HeaderButton = React.forwardRef(function HeaderButton(props, ref) {\r\n    const [open, setOpen] = useState(false);\r\n    const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n    //dropdown will only open if component IS a dropdown\r\n    var openD = typeof props.children === \"object\" && props.children.type.name === Dropdown.name;\r\n\r\n    function clickOutside() {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <OutsideAlerter className={style.headerItem} component=\"li\" onClickOutside={clickOutside}> \r\n            <div className={style.headerButton} data-drawer={drawerOpen} onClick={()=>{\r\n                setOpen(!open);\r\n                setDrawerOpen(!drawerOpen);\r\n                if(!drawerOpen) {\r\n                    props.drawer ? props.addDrawer(props.drawer) : props.removeDrawer();\r\n                } else {\r\n                    props.removeDrawer();\r\n                }\r\n            }} ref={ref}>\r\n                {props.icon && props.icon}\r\n            </div>\r\n\r\n            {open ? \r\n            <div>{props.children}</div>\r\n            : undefined}\r\n        </OutsideAlerter>\r\n    );\r\n});"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}