{"version":3,"file":"static/webpack/static\\development\\pages\\dropdownExample.js.1514d51432572b5d5844.hot-update.js","sources":["webpack:///./components/layout/Header.js"],"sourcesContent":["import style from \"../../style/header.module.sass\";\r\nimport EyeOfJudgement from \"../../res/svg/eyeOfJudgementEllipse.svg\"\r\nimport { useState } from \"react\";\r\n\r\nimport { CSSTransition} from \"react-transition-group\";\r\n\r\nimport outerAnim from \"../../style/dropdownOuter.module.sass\"; \r\nimport innerAnim from \"../../style/dropdownInner.module.sass\";\r\n\r\nimport defaultStyle from \"../../style/dropdown.module.sass\"\r\n\r\n\r\nexport function Header(props) {\r\n    return (\r\n        <nav className={style.header}>\r\n            <div className={style.logo}>\r\n                <EyeOfJudgement/>\r\n            </div>\r\n            <div className={style.headerTray}>\r\n                {props.children}\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\n\r\nexport function HeaderButton(props) {\r\n    const [open, setOpen] = useState(false);\r\n    //dropdown will only open if component IS a dropdown\r\n    var openD = typeof props.children === \"object\" && props.children.type.name === Dropdown.name;\r\n    console.log(props.children);\r\n\r\n    return (\r\n        <>\r\n            <div className={style.headerButton} onClick={()=>setOpen(!open)}>\r\n                {props.icon && props.icon}\r\n            </div>\r\n\r\n            {open ? \r\n            <div>{props.children}</div>\r\n            : undefined}\r\n        </>\r\n    );\r\n}\r\n\r\nexport class Dropdown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            menus: [\r\n                props.children\r\n            ],\r\n            menuHeight: null,\r\n\r\n            adding: false,\r\n            addingTrans: false,\r\n            backing: false,\r\n\r\n            suppress: false,\r\n            reverse: false\r\n        }; //enforce type: props.children\r\n    }\r\n\r\n    add = (menu) => {\r\n        //console.log(\"Adding Menu: \", menu)\r\n        this.setState((prev) => {\r\n            if(prev.backing || prev.adding) { //anim is already in progress\r\n                return;// console.log(\"no\");\r\n            }\r\n\r\n            //console.log(\"Previous Menus: \", prev.menus);\r\n            return {\r\n                menus: prev.menus.concat(menu),\r\n                reverse: true,\r\n                suppress: true,\r\n                adding: true\r\n            };\r\n        });\r\n    }\r\n\r\n    back = () => {\r\n        this.setState((prev) => {\r\n            //console.log(\"Back Button engaged\");\r\n            //anim already in progress, active menu is root\r\n            if(prev.menus.length<2 ||prev.backing || prev.adding)\r\n                return; //console.log(\"no\"); //noop\r\n\r\n            //start backing\r\n            return {\r\n                backing: true,\r\n                reverse: true\r\n            };\r\n        });\r\n    }\r\n\r\n    done = () => {\r\n        this.setState((prev) => {\r\n            if(prev.addingTrans) {\r\n                return this.addingDone(prev);\r\n            }\r\n            if(prev.backing) {\r\n                return this.backingDone(prev);\r\n            }\r\n            return {};\r\n        });\r\n    }\r\n\r\n    backingDone = (prev) => {\r\n        if(prev.menus.length<2)\r\n            return; //noop\r\n\r\n        //console.log(\"MEnus before removal:\",prev.menus)\r\n        return {\r\n            backing: false,\r\n            reverse: false,\r\n            menus: prev.menus.slice(0, prev.menus.length-1),\r\n            suppress: true\r\n        } \r\n    }\r\n\r\n    addingDone = (prev) => {\r\n        return {\r\n            adding: false,\r\n            addingTrans: false\r\n        }\r\n    }\r\n\r\n    calculateHeight =(el) =>{\r\n        console.log(el);\r\n        /*this.setState({\r\n            menuHeight: el.offsetHeight\r\n        });*/\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //Disables Animation-Suppression after render, when adding flips reverse back to false\r\n        if(this.state.suppress) {\r\n            var changes = {\r\n                suppress: false\r\n            }\r\n            if (this.state.adding) {\r\n                changes.reverse = false;\r\n                changes.addingTrans = true;\r\n            }\r\n\r\n            this.setState(changes);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var menu = this.state.menus;\r\n        var mL = menu.length\r\n        var menuObj =  [menu[mL-1], menu[mL-2] || undefined];\r\n\r\n        /**\r\n         * The second menu is the active one.\r\n         * The first one is the one before, that will transition in when the user hits \"back\"\r\n         * \r\n         * When a menu is added by a menuItem, that Menu gets appended to the array and thus the second will switch places to the inactive menu and will start transitioning out\r\n         * When the user hits back, the active menu will transition out using the \"outer\" anim and will then get sliced of off the array\r\n         */\r\n        return ( \r\n            <div className={defaultStyle.dropdown} style={{height: this.state.menuHeight}}>\r\n                <DropdownMenu \r\n                    add={this.add} \r\n                    done={this.done} \r\n                    back={this.back}\r\n                    calcHeight = {this.calculateHeight}\r\n                    in={this.state.reverse}\r\n                    suppress={this.state.suppress}\r\n                >\r\n                    {menuObj[1]}\r\n                </DropdownMenu>\r\n                <DropdownMenu \r\n                    add={this.add} \r\n                    done={this.done} \r\n                    back={this.back}\r\n                    calcHeight = {this.calculateHeight}\r\n                    in={!this.state.reverse}\r\n                    suppress={this.state.suppress}\r\n                    outer\r\n                >\r\n                    {menuObj[0]}\r\n                </DropdownMenu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DropdownMenu extends React.Component {\r\n    onClick= () => {\r\n        this.props.back();\r\n    }\r\n\r\n    render() {\r\n        var items = this.props.children || [];\r\n        var itemObj = items.map((item) => {\r\n            item.props\r\n            return React.cloneElement(item, { add: this.props.add })\r\n        });\r\n\r\n        var anim = this.props.outer ? outerAnim : innerAnim;\r\n\r\n        return (\r\n            <CSSTransition\r\n                timeout={300} \r\n                classNames={{ ...anim }} \r\n                className={defaultStyle.menu}\r\n                component=\"div\"\r\n                in={this.props.in}\r\n                onEnter = {(obj) => {\r\n                    this.props.calcHeight(obj);\r\n                }}\r\n                onExited = {(obj)=>{\r\n                    //console.log(\"calling done\", obj);\r\n                    this.props.done(); // tell Dropdown that a transition has completed\r\n                }}\r\n                enter = {!this.props.suppress}\r\n                exit = {!this.props.suppress}\r\n                mountOnEnter\r\n                unmountOnExit\r\n            >\r\n                <ul>\r\n                    <DropdownItem onClick={this.onClick}>BACK</DropdownItem>\r\n                    {itemObj}\r\n                </ul>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n};\r\n\r\nexport function DropdownItem (props) {\r\n    var secndry = props.dropdown;\r\n    if (props.link && secndry) { //no double behaviour\r\n        props.link = \"#\";\r\n    }\r\n\r\n    function onClick() {\r\n        if(secndry) props.add(secndry);\r\n    }\r\n\r\n\r\n    return (\r\n        <li >\r\n            <a href={props.link || \"#\"} className={defaultStyle.item} onClick={props.onClick || onClick}>\r\n                {props.leftIcon}\r\n                {props.children}\r\n                {props.rightIcon}\r\n            </a>\r\n        </li>\r\n    );\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAmBA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAlCA;AAoCA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAjDA;AAmDA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA7DA;AA+DA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AA1EA;AA4EA;AACA;AACA;AAFA;AAIA;AACA;AAjFA;AAmFA;AACA;;;AAGA;AACA;AArFA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AAXA;AACA;AAJA;AAgBA;AACA;AAlBA;AAAA;AAAA;AA2FA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvGA;AAAA;AAAA;AA0GA;AACA;AACA;AAEA;;;;;;;;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AA9IA;AACA;AADA;AAAA;AAiJA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AAKA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAvCA;AACA;AADA;AAAA;AAwCA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;A","sourceRoot":""}