{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.69cafce4c5e82f0c17f1.hot-update.js","sources":["webpack:///./components/PushSubToggle.js"],"sourcesContent":["import { DropdownItem } from \"./MultilevelMenu\";\r\nimport { FaBell } from \"react-icons/fa\";\r\nimport { useIdentity } from \"../hooks/identity\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { apiUrl } from \"../constants/index\";\r\n\r\nexport function PushSubToggle() {\r\n    var [id, axios] = useIdentity();\r\n    const [subs, setSubs] = useState({});\r\n    var activeUser = id.users[id.active];\r\n    const [pending, setPending] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setSubs(JSON.parse(localStorage.getItem(\"notifications\") ||\"{}\" ));\r\n    }, []);\r\n\r\n    async function onClick() {\r\n        //\r\n        if(!\"serviceWorker\" in navigator || !activeUser) {return;}\r\n\r\n        var reg = await navigator.serviceWorker.ready;\r\n        var sub = await reg.pushManager.getSubscription();\r\n        if(!sub) {\r\n            const response = await fetch(apiUrl+\"/notifier/pushSubscriptionKey\");\r\n            const body = await response.json();\r\n            const publicKey = urlBase64ToUint8Array( body.public );\r\n\r\n            try {\r\n                sub = await reg.pushManager.subscribe({\r\n                    userVisibleOnly: true,\r\n                    applicationServerKey: publicKey\r\n                });\r\n    \r\n                axios.post(\"/notifier/subscribe\", {\r\n                    ...sub.toJSON()\r\n                }, {params: {usersub: true}});\r\n            } catch (err) {\r\n\r\n            }\r\n        }\r\n\r\n        setSubs((prev)=>{\r\n            var lol = {...prev};\r\n            lol[id.users[id.active].username] = !prev[id.users[id.active].username];\r\n            localStorage.setItem(\"notifications\", JSON.stringify(lol));\r\n            return lol;\r\n        });\r\n    }\r\n\r\n\r\n    var on = !!activeUser && !!subs[activeUser.username];\r\n    var statText = on?\"ON\":\"OFF\";\r\n    if(!activeUser) {\r\n        statText = \"PLS LOG IN\";\r\n    }\r\n    if(typeof Notification !== \"undefined\" && Notification.permission === \"denied\") {\r\n        on = false;\r\n        statText = \"DENIED\";\r\n    }\r\n    if(typeof navigator === \"undefined\" || !\"serviceWorker\" in navigator) {\r\n        on = false;\r\n        statText = \"UNSUPPORTED\";\r\n    }\r\n\r\n    return (\r\n    <DropdownItem \r\n        onClick={onClick}\r\n        leftIcon={<FaBell />} \r\n        text={<>Notifications: <span style={{ color: on?\"lime\":\"red\" }}>{statText}</span></>}\r\n    ></DropdownItem>);\r\n}\r\n\r\nfunction urlBase64ToUint8Array(base64String) {\r\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n    const base64 = (base64String + padding)\r\n      .replace(/-/g, '+')\r\n      .replace(/_/g, '/');\r\n   \r\n    const rawData = window.atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n   \r\n    for (let i = 0; i < rawData.length; ++i) {\r\n      outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAJA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AACA;AADA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAOA;AAPA;AAAA;AACA;AADA;AAQA;AACA;AATA;AAAA;AAAA;AAaA;AACA;AAFA;AACA;AAbA;AAYA;AAKA;AAEA;AAAA;AAAA;AAAA;AAnBA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAyBA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAiCA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;A","sourceRoot":""}