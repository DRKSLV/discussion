{"version":3,"file":"static/webpack/static\\development\\pages\\dialog.js.aaa3539fddacb23b3820.hot-update.js","sources":["webpack:///./pages/dialog.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Layout } from \"../components/layout/Layout\";\r\nimport dia from \"../constants/dialog.json\";\r\nimport s from \"../style/dialog.module.sass\"\r\n\r\nexport default function Home() {\r\n    console.log(dia);\r\n    return (<Layout title=\"Dialog test\">\r\n       <Dialog dialog={dia}/>\r\n    </Layout>)\r\n}\r\n\r\nfunction Dialog(props) {\r\n    var d = props.dialog;\r\n    var [option, setOption] = useState(-1);\r\n    var [line, setLine] = useState(0);\r\n\r\n    function keyDwn(evt) {\r\n        setLine((prev) => {\r\n            if(option===-1)\r\n                return prev; \r\n            return prev+1\r\n        });\r\n    }\r\n\r\n    function setOpt(i) {\r\n        setOption(i);\r\n        setLine(0);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.dialogBox} onKeyDown={keyDwn} tabIndex=\"0\">\r\n            {option===-1?<DisplayOptions dia={d} setOpt={setOpt}/>:\"\"}\r\n            {option!==-1?<Line line={d.options[option].answer} idx={line} setOpt={setOpt}/>:\"\"}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Line({line=\"...\", idx, setOpt: setTopOpt}) {\r\n    var current=null;\r\n    var [option, setOption] = useState(-1);\r\n    var [innerLine, setLine] = useState(0);\r\n    \r\n    if(Array.isArray(line)){\r\n        if(line.length<1)\r\n            line=[\"...\"];\r\n        current = line[Math.min(idx, line.length-1)];\r\n    } else {\r\n        current = line;\r\n    }\r\n\r\n    function setOpt(i) {\r\n        setOption(i);\r\n        setLine(0);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if( Array.isArray(line) && idx>=line.length || !Array.isArray(line) && idx>0 ) {\r\n            if(setTopOpt) setTopOpt(-1);\r\n        } \r\n    }, [idx, line]);\r\n\r\n    var currentString= typeof current!==\"object\"?current:(option===-1?current.text:\"\");\r\n\r\n    return <>{currentString||\"...\"}  \r\n        {current.options&&\r\n            (option===-1&&<DisplayOptions dia={line} setOpt={setOpt}/>)\r\n            ||\r\n            (option!==-1&&<Line line={current.options[option].answer} idx={innerLine} setOpt={setOpt}/>)\r\n        }\r\n    </>;\r\n}\r\n\r\nfunction DisplayOptions({dia, setOpt}) {\r\n    var arr = [];\r\n\r\n    function clicked(i) {\r\n        if(typeof setOpt === \"function\") {\r\n            setOpt(i);\r\n        }\r\n    }\r\n\r\n    dia.options.forEach((opt, i) => {\r\n        arr.push(\r\n        <li \r\n            className={s.dialogOption}\r\n            onClick={()=>clicked(i)}\r\n            key={i}\r\n        >\r\n            {opt.question}</li>\r\n        );\r\n    });\r\n\r\n    if (!dia.options || dia.options.length<1)\r\n        arr =  [<li>+ There was nothing to say</li>];\r\n\r\n    return <ol>\r\n        {arr}\r\n    </ol>;\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}